@model LBCAlerterWeb.Models.Search
@{
    ViewBag.Title = "Editer";
    ViewBag.Current = "search_" + Model.ID;
}

@using (Html.BeginForm())
{
    <h4>Modification de l'alerte</h4>
    <hr />

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.CreationDate)
    @Html.HiddenFor(model => model.Url)
    @Html.HiddenFor(model => model.LastRecap)


    @Html.TextBoxFor(model => model.KeyWord, new { @placeholder = @Html.DisplayNameFor(model => model.KeyWord), @required = "required" })
    @Html.ValidationMessageFor(model => model.KeyWord)

    <div class="onoffswitch-container">
        @Html.Label("", "Alertes email ?", new { @class = "control-label" })
        <div class="col-xs-4 control-block">
            <div class="onoffswitch labeled primary">
                @Html.CheckBoxFor(m => m.MailAlert, new { @class = "onoffswitch-checkbox" })
                <label class="onoffswitch-label" for="MailAlert">
                    <span class="onoffswitch-inner"></span>
                    <span class="onoffswitch-switch"></span>
                </label>
            </div>
        </div>
        <div class="clearfix"></div>
    </div>
    
    <div class="onoffswitch-container">
        @Html.Label("", "Récap. email ?", new { @class = "control-label" })
        <div class="col-xs-4 control-block">
            <div class="onoffswitch labeled primary">
                @Html.CheckBoxFor(m => m.MailRecap, new { @class = "onoffswitch-checkbox" })
                <label class="onoffswitch-label" for="MailRecap">
                    <span class="onoffswitch-inner"></span>
                    <span class="onoffswitch-switch"></span>
                </label>
            </div>
        </div>
        <div class="clearfix"></div>
    </div>

    @Html.TextBoxFor(model => model.RefreshTime, new { @placeholder = @Html.DisplayNameFor(model => model.RefreshTime), @required = "required" })
    @Html.ValidationMessageFor(model => model.RefreshTime)

    if (Roles.IsUserInRole("admin"))
    {
        @Html.LabelFor(model => model.Url, new { @class = "control-label col-md-2" })
        @Html.DisplayFor(model => model.Url)
    }
     
    <input type="submit" value="Sauvegarder" class="btn btn-primary btn-lg" />

    <div class="links">
        @Html.ActionLink("Retour à la liste", "Index")
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
