//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18051
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LBCAlerter.Identifier {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseInfo", Namespace="EmAppManager")]
    [System.SerializableAttribute()]
    public partial class LicenseInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime CreationDateField;
        
        private System.DateTime ExpireDateField;
        
        private int DaysLeftField;
        
        private int SetTimeField;
        
        private LBCAlerter.Identifier.LicenseStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime ExpireDate {
            get {
                return this.ExpireDateField;
            }
            set {
                if ((this.ExpireDateField.Equals(value) != true)) {
                    this.ExpireDateField = value;
                    this.RaisePropertyChanged("ExpireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int DaysLeft {
            get {
                return this.DaysLeftField;
            }
            set {
                if ((this.DaysLeftField.Equals(value) != true)) {
                    this.DaysLeftField = value;
                    this.RaisePropertyChanged("DaysLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int SetTime {
            get {
                return this.SetTimeField;
            }
            set {
                if ((this.SetTimeField.Equals(value) != true)) {
                    this.SetTimeField = value;
                    this.RaisePropertyChanged("SetTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public LBCAlerter.Identifier.LicenseStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseStatus", Namespace="EmAppManager")]
    public enum LicenseStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trial = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullLimited = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Full = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="EmAppManager", ConfigurationName="Identifier.IdentifySoap")]
    public interface IdentifySoap {
        
        // CODEGEN : La génération du contrat de message depuis le nom d'élément app de l'espace de noms EmAppManager n'est pas marqué nillable
        [System.ServiceModel.OperationContractAttribute(Action="EmAppManager/Validate", ReplyAction="*")]
        LBCAlerter.Identifier.ValidateResponse Validate(LBCAlerter.Identifier.ValidateRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Validate", Namespace="EmAppManager", Order=0)]
        public LBCAlerter.Identifier.ValidateRequestBody Body;
        
        public ValidateRequest() {
        }
        
        public ValidateRequest(LBCAlerter.Identifier.ValidateRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="EmAppManager")]
    public partial class ValidateRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string app;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int machine;
        
        public ValidateRequestBody() {
        }
        
        public ValidateRequestBody(string app, int machine) {
            this.app = app;
            this.machine = machine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidateResponse", Namespace="EmAppManager", Order=0)]
        public LBCAlerter.Identifier.ValidateResponseBody Body;
        
        public ValidateResponse() {
        }
        
        public ValidateResponse(LBCAlerter.Identifier.ValidateResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="EmAppManager")]
    public partial class ValidateResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public LBCAlerter.Identifier.LicenseInfo ValidateResult;
        
        public ValidateResponseBody() {
        }
        
        public ValidateResponseBody(LBCAlerter.Identifier.LicenseInfo ValidateResult) {
            this.ValidateResult = ValidateResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IdentifySoapChannel : LBCAlerter.Identifier.IdentifySoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IdentifySoapClient : System.ServiceModel.ClientBase<LBCAlerter.Identifier.IdentifySoap>, LBCAlerter.Identifier.IdentifySoap {
        
        public IdentifySoapClient() {
        }
        
        public IdentifySoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IdentifySoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IdentifySoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IdentifySoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LBCAlerter.Identifier.ValidateResponse LBCAlerter.Identifier.IdentifySoap.Validate(LBCAlerter.Identifier.ValidateRequest request) {
            return base.Channel.Validate(request);
        }
        
        public LBCAlerter.Identifier.LicenseInfo Validate(string app, int machine) {
            LBCAlerter.Identifier.ValidateRequest inValue = new LBCAlerter.Identifier.ValidateRequest();
            inValue.Body = new LBCAlerter.Identifier.ValidateRequestBody();
            inValue.Body.app = app;
            inValue.Body.machine = machine;
            LBCAlerter.Identifier.ValidateResponse retVal = ((LBCAlerter.Identifier.IdentifySoap)(this)).Validate(inValue);
            return retVal.Body.ValidateResult;
        }
    }
}
